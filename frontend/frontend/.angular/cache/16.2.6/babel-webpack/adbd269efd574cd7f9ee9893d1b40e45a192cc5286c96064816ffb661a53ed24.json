{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegRequestService {\n  constructor(http) {\n    this.http = http;\n    this.uri = 'http://localhost:8080/requests';\n  }\n  register(username, cv, subjects, age, where) {\n    const data = {\n      username: username,\n      cv: cv,\n      subjects: subjects,\n      age: age,\n      whereDidYouHearAboutUs: where\n    };\n    return this.http.post(`${this.uri}/addRequest`, data);\n  }\n  getRequest(username) {\n    return this.http.post(`${this.uri}/getRequest`, username);\n  }\n  updateAge(username, age) {\n    const data = {\n      username: username,\n      age: age\n    };\n    return this.http.post(`${this.uri}/updateAge`, data);\n  }\n  approve(username) {\n    return this.http.post(`${this.uri}/approve`, username);\n  }\n  deny(username) {\n    return this.http.post(`${this.uri}/deny`, username);\n  }\n  getAgeCount() {\n    return this.http.get(`${this.uri}/getAgeCount`);\n  }\n  static #_ = this.ɵfac = function RegRequestService_Factory(t) {\n    return new (t || RegRequestService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegRequestService,\n    factory: RegRequestService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RegRequestService","constructor","http","uri","register","username","cv","subjects","age","where","data","whereDidYouHearAboutUs","post","getRequest","updateAge","approve","deny","getAgeCount","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\services\\reg_request.service.ts"],"sourcesContent":["import { HttpClient, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RegRequest } from '../models/RegRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegRequestService {\n\n  constructor(private http:HttpClient) { }\n\n  uri = 'http://localhost:8080/requests';\n\n  register(username: string, cv: string, subjects: string, age: string, where: string) {\n     const data = {\n      username : username,\n      cv: cv,\n      subjects : subjects,\n      age : age,\n      whereDidYouHearAboutUs : where\n    }\n    return this.http.post<number>(`${this.uri}/addRequest`, data);\n  }\n\n  getRequest(username: string) {\n    return this.http.post<RegRequest>(`${this.uri}/getRequest`, username);\n  }\n\n  updateAge(username:string, age: string) {\n    const data = {\n     username: username,\n     age : age\n   }\n   return this.http.post<number>(`${this.uri}/updateAge`, data);\n  }\n\n  approve(username: string) {\n    return this.http.post<number>(`${this.uri}/approve`, username);\n  }\n\n  deny(username: string) {\n    return this.http.post<number>(`${this.uri}/deny`, username);\n  }\n\n  getAgeCount() {\n    return this.http.get<number[]>(`${this.uri}/getAgeCount`);\n  }\n\n}"],"mappings":";;AAOA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,GAAG,GAAG,gCAAgC;EAFC;EAIvCC,QAAQA,CAACC,QAAgB,EAAEC,EAAU,EAAEC,QAAgB,EAAEC,GAAW,EAAEC,KAAa;IAChF,MAAMC,IAAI,GAAG;MACZL,QAAQ,EAAGA,QAAQ;MACnBC,EAAE,EAAEA,EAAE;MACNC,QAAQ,EAAGA,QAAQ;MACnBC,GAAG,EAAGA,GAAG;MACTG,sBAAsB,EAAGF;KAC1B;IACD,OAAO,IAAI,CAACP,IAAI,CAACU,IAAI,CAAS,GAAG,IAAI,CAACT,GAAG,aAAa,EAAEO,IAAI,CAAC;EAC/D;EAEAG,UAAUA,CAACR,QAAgB;IACzB,OAAO,IAAI,CAACH,IAAI,CAACU,IAAI,CAAa,GAAG,IAAI,CAACT,GAAG,aAAa,EAAEE,QAAQ,CAAC;EACvE;EAEAS,SAASA,CAACT,QAAe,EAAEG,GAAW;IACpC,MAAME,IAAI,GAAG;MACZL,QAAQ,EAAEA,QAAQ;MAClBG,GAAG,EAAGA;KACP;IACD,OAAO,IAAI,CAACN,IAAI,CAACU,IAAI,CAAS,GAAG,IAAI,CAACT,GAAG,YAAY,EAAEO,IAAI,CAAC;EAC7D;EAEAK,OAAOA,CAACV,QAAgB;IACtB,OAAO,IAAI,CAACH,IAAI,CAACU,IAAI,CAAS,GAAG,IAAI,CAACT,GAAG,UAAU,EAAEE,QAAQ,CAAC;EAChE;EAEAW,IAAIA,CAACX,QAAgB;IACnB,OAAO,IAAI,CAACH,IAAI,CAACU,IAAI,CAAS,GAAG,IAAI,CAACT,GAAG,OAAO,EAAEE,QAAQ,CAAC;EAC7D;EAEAY,WAAWA,CAAA;IACT,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAW,GAAG,IAAI,CAACf,GAAG,cAAc,CAAC;EAC3D;EAAC,QAAAgB,CAAA,G;qBAvCUnB,iBAAiB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBxB,iBAAiB;IAAAyB,OAAA,EAAjBzB,iBAAiB,CAAA0B,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
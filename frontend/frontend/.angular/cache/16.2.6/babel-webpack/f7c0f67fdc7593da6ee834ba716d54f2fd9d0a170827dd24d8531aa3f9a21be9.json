{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.uri = 'http://localhost:8080/users';\n  }\n  login(username, password) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.post(`${this.uri}/login`, data);\n  }\n  logout() {\n    localStorage.clear();\n  }\n  getUser(username) {\n    return this.http.post(`${this.uri}/getUser`, {\n      username: username\n    });\n  }\n  uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.http.post(`${this.uri}/uploadFile`, formData, {\n      responseType: 'text'\n    });\n  }\n  getImageFile(path) {\n    return this.http.get(path, {\n      responseType: 'arraybuffer'\n    }).pipe(map(data => {\n      const blob = new Blob([data], {\n        type: 'image/png'\n      });\n      const fileName = path.substring(path.lastIndexOf('/') + 1);\n      const file = new File([blob], fileName, {\n        type: 'image/png'\n      });\n      return file;\n    }));\n  }\n  register(username, password, type, firstname, lastname, gender, address, email, image, typeOfSchool, currentGrade) {\n    const data = {\n      username: username,\n      password: password,\n      type: type,\n      firstname: firstname,\n      lastname: lastname,\n      gender: gender,\n      address: address,\n      email: email,\n      image: image,\n      typeOfSchool: typeOfSchool,\n      currentGrade: currentGrade\n    };\n    return this.http.post(`${this.uri}/addUser`, data);\n  }\n  changePassword(username, password) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.post(`${this.uri}/changePassword`, data);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","UserService","constructor","http","uri","login","username","password","data","post","logout","localStorage","clear","getUser","uploadFile","file","formData","FormData","append","responseType","getImageFile","path","get","pipe","blob","Blob","type","fileName","substring","lastIndexOf","File","register","firstname","lastname","gender","address","email","image","typeOfSchool","currentGrade","changePassword","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/User';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient) { }\n\n  uri = 'http://localhost:8080/users';\n\n  login(username: string, password: string) {\n    const data = {\n      username : username,\n      password : password\n    }\n    return this.http.post<User>(`${this.uri}/login`, data);\n  }\n\n  logout() {\n    localStorage.clear();\n  }\n\n  getUser(username: string) {\n    return this.http.post<User>(`${this.uri}/getUser`, {username: username});\n  }\n\n  uploadFile(file: File) {\n    const formData: FormData = new FormData();\n    formData.append('file', file);\n    return this.http.post<string>(`${this.uri}/uploadFile`, formData, {responseType: 'text' as 'json'} );\n  }\n\n  getImageFile(path: string): Observable<File> {\n    return this.http.get(path, { responseType: 'arraybuffer' }).pipe(\n        map((data: ArrayBuffer) => {\n          const blob = new Blob([data], { type: 'image/png' });\n          const fileName = path.substring(path.lastIndexOf('/') + 1);\n          const file: File = new File([blob], fileName, { type: 'image/png' });\n          return file;\n        })\n      );\n  }\n\n  register(username: string, password: string, type: string, firstname: string, lastname: string, gender: string, address: string,\n    email: string, image: string, typeOfSchool: string, currentGrade: number) {\n      const data = {\n        username: username,\n        password: password,\n        type: type,\n        firstname: firstname,\n        lastname: lastname,\n        gender: gender,\n        address: address,\n        email: email,\n        image: image,\n        typeOfSchool: typeOfSchool,\n        currentGrade: currentGrade,\n      }\n      return this.http.post<number>(`${this.uri}/addUser`, data);\n  }\n\n  changePassword(username: string, password: string) {\n    const data = {\n      username : username,\n      password : password\n    }\n    return this.http.post<number>(`${this.uri}/changePassword`, data);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SecurityQuestionComponent = class SecurityQuestionComponent {\n  constructor(service, app) {\n    this.service = service;\n    this.app = app;\n    this.loggedIn = false;\n    this.user = new User();\n    this.old = \"\";\n    this.new = \"\";\n    this.confirm = \"\";\n    this.message = \"\";\n  }\n  ngOnInit() {\n    let item = localStorage.getItem('loggedIn');\n    if (item) this.user = JSON.parse(item);\n    if (this.user.username == \"\") this.loggedIn = false;else this.loggedIn = true;\n  }\n  save() {\n    if (this.old == \"\" || this.new == \"\" || this.confirm == \"\") {\n      this.message = \"Please fill out all fields before continuing.\";\n      return;\n    }\n    this.service.login(this.user.username, this.old).subscribe(user => {\n      if (!user) {\n        this.message = 'The old password is not correct!';\n      } else {\n        if (this.new !== this.confirm) {\n          this.message = \"The new password and the cofirmed password do not match!\";\n        } else {\n          this.service.changePassword(this.user.username, this.new).subscribe(resp => {\n            if (resp > 0) {\n              this.message = '';\n              alert(\"You have successfully changed the password.\");\n              this.app.profile();\n            } else this.message = \"Error\";\n          });\n        }\n      }\n    });\n  }\n};\nSecurityQuestionComponent = __decorate([Component({\n  selector: 'app-security-question',\n  templateUrl: './security-question.component.html',\n  styleUrls: ['./security-question.component.css']\n})], SecurityQuestionComponent);","map":{"version":3,"names":["Component","SecurityQuestionComponent","constructor","service","app","loggedIn","user","User","old","new","confirm","message","ngOnInit","item","localStorage","getItem","JSON","parse","username","save","login","subscribe","changePassword","resp","alert","profile","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\security-question\\security-question.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-security-question',\n  templateUrl: './security-question.component.html',\n  styleUrls: ['./security-question.component.css']\n})\nexport class SecurityQuestionComponent {\n  constructor(private service: UserService, public app: AppComponent) { }\n\n  ngOnInit() {\n    let item = localStorage.getItem('loggedIn')\n    if(item) this.user = JSON.parse(item);\n    if(this.user.username == \"\") this.loggedIn = false;\n    else this.loggedIn = true;\n  }\n\n  loggedIn: boolean = false;\n  user: User = new User();\n  old: string = \"\";\n  new: string = \"\";\n  confirm: string = \"\";\n  message: string = \"\";\n\n  save() {\n    if(this.old == \"\" || this.new == \"\" || this.confirm == \"\") {\n      this.message = \"Please fill out all fields before continuing.\"; \n      return;\n    }\n    this.service.login(this.user.username, this.old).subscribe((user: User)=>{\n      if(!user){\n        this.message = 'The old password is not correct!';\n      } else {\n        if(this.new !== this.confirm) {\n          this.message = \"The new password and the cofirmed password do not match!\"\n        }\n        else {\n          this.service.changePassword(this.user.username, this.new).subscribe(resp=>{\n            if (resp>0) {\n              this.message = '';\n              alert(\"You have successfully changed the password.\")\n              this.app.profile();\n            }\n            else \n              this.message = \"Error\";\n          })\n        }\n      }\n    })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EACpCC,YAAoBC,OAAoB,EAASC,GAAiB;IAA9C,KAAAD,OAAO,GAAPA,OAAO;IAAsB,KAAAC,GAAG,GAAHA,GAAG;IASpD,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,IAAI,GAAS,IAAIC,IAAI,EAAE;IACvB,KAAAC,GAAG,GAAW,EAAE;IAChB,KAAAC,GAAG,GAAW,EAAE;IAChB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,OAAO,GAAW,EAAE;EAdkD;EAEtEC,QAAQA,CAAA;IACN,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC3C,IAAGF,IAAI,EAAE,IAAI,CAACP,IAAI,GAAGU,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IACrC,IAAG,IAAI,CAACP,IAAI,CAACY,QAAQ,IAAI,EAAE,EAAE,IAAI,CAACb,QAAQ,GAAG,KAAK,CAAC,KAC9C,IAAI,CAACA,QAAQ,GAAG,IAAI;EAC3B;EASAc,IAAIA,CAAA;IACF,IAAG,IAAI,CAACX,GAAG,IAAI,EAAE,IAAI,IAAI,CAACC,GAAG,IAAI,EAAE,IAAI,IAAI,CAACC,OAAO,IAAI,EAAE,EAAE;MACzD,IAAI,CAACC,OAAO,GAAG,+CAA+C;MAC9D;;IAEF,IAAI,CAACR,OAAO,CAACiB,KAAK,CAAC,IAAI,CAACd,IAAI,CAACY,QAAQ,EAAE,IAAI,CAACV,GAAG,CAAC,CAACa,SAAS,CAAEf,IAAU,IAAG;MACvE,IAAG,CAACA,IAAI,EAAC;QACP,IAAI,CAACK,OAAO,GAAG,kCAAkC;OAClD,MAAM;QACL,IAAG,IAAI,CAACF,GAAG,KAAK,IAAI,CAACC,OAAO,EAAE;UAC5B,IAAI,CAACC,OAAO,GAAG,0DAA0D;SAC1E,MACI;UACH,IAAI,CAACR,OAAO,CAACmB,cAAc,CAAC,IAAI,CAAChB,IAAI,CAACY,QAAQ,EAAE,IAAI,CAACT,GAAG,CAAC,CAACY,SAAS,CAACE,IAAI,IAAE;YACxE,IAAIA,IAAI,GAAC,CAAC,EAAE;cACV,IAAI,CAACZ,OAAO,GAAG,EAAE;cACjBa,KAAK,CAAC,6CAA6C,CAAC;cACpD,IAAI,CAACpB,GAAG,CAACqB,OAAO,EAAE;aACnB,MAEC,IAAI,CAACd,OAAO,GAAG,OAAO;UAC1B,CAAC,CAAC;;;IAGR,CAAC,CAAC;EACJ;CACD;AA3CYV,yBAAyB,GAAAyB,UAAA,EALrC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACW5B,yBAAyB,CA2CrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
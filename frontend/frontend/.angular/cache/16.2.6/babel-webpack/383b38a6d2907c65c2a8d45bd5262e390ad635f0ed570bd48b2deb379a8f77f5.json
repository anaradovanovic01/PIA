{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UpdateProfileComponent = class UpdateProfileComponent {\n  constructor(service, router, app) {\n    this.service = service;\n    this.router = router;\n    this.app = app;\n  }\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('loggedIn'));\n    if (!this.user) this.loggedIn = false;else this.loggedIn = true;\n    this.firstname = this.user.firstname;\n    this.lastname = this.user.lastname;\n    this.address = this.user.address;\n    this.contact = this.user.contact;\n    this.email = this.user.email;\n  }\n  update() {\n    if (!this.firstname || !this.lastname || !this.address || !this.contact || !this.email) {\n      this.message = \"Please fill at least one field before continuing.\";\n      return;\n    }\n    this.service.update(this.user.username, this.firstname, this.lastname, this.address, this.contact, this.email).subscribe(resp => {\n      if (resp[\"success\"] == true) {\n        this.message = '';\n        alert(\"You have successfully updated your profile!\");\n        this.user.firstname = this.firstname;\n        this.user.lastname = this.lastname;\n        this.user.address = this.address;\n        this.user.contact = this.contact;\n        this.user.email = this.email;\n        localStorage.setItem('loggedIn', JSON.stringify(this.user));\n        this.router.navigate(['/patientProfile']);\n      } else this.message = \"Error\";\n    });\n  }\n};\nUpdateProfileComponent = __decorate([Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.css']\n})], UpdateProfileComponent);","map":{"version":3,"names":["Component","UpdateProfileComponent","constructor","service","router","app","ngOnInit","user","JSON","parse","localStorage","getItem","loggedIn","firstname","lastname","address","contact","email","update","message","username","subscribe","resp","alert","setItem","stringify","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\update-profile\\update-profile.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.css']\n})\nexport class UpdateProfileComponent {\n\n  constructor(private service:UsersService, private router:Router, private app:AppComponent) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('loggedIn'));\n    if(!this.user) this.loggedIn = false;\n    else this.loggedIn = true;\n    this.firstname = this.user.firstname;\n    this.lastname = this.user.lastname;\n    this.address = this.user.address;\n    this.contact = this.user.contact;\n    this.email = this.user.email;\n  }\n\n  firstname: string;\n  lastname: string;\n  address: string;\n  contact : string;\n  email : string;\n  message: string;\n  loggedIn: boolean;\n  user: User;\n\n  update() {\n    if(!this.firstname || !this.lastname || !this.address || !this.contact || !this.email) {\n      this.message = \"Please fill at least one field before continuing.\"; \n      return;\n    }\n    this.service.update(this.user.username, this.firstname, this.lastname, this.address, this.contact, this.email).subscribe((resp)=>{\n      if (resp[\"success\"] == true) {\n        this.message = '';\n        alert(\"You have successfully updated your profile!\");\n        this.user.firstname = this.firstname;\n        this.user.lastname = this.lastname;\n        this.user.address = this.address;\n        this.user.contact = this.contact;\n        this.user.email = this.email;\n        localStorage.setItem('loggedIn', JSON.stringify(this.user));\n        this.router.navigate(['/patientProfile']);\n      }\n      else \n        this.message = \"Error\";\n    })\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAEjCC,YAAoBC,OAAoB,EAAUC,MAAa,EAAUC,GAAgB;IAArE,KAAAF,OAAO,GAAPA,OAAO;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,GAAG,GAAHA,GAAG;EAAiB;EAE7FC,QAAQA,CAAA;IACN,IAAI,CAACC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACxD,IAAG,CAAC,IAAI,CAACJ,IAAI,EAAE,IAAI,CAACK,QAAQ,GAAG,KAAK,CAAC,KAChC,IAAI,CAACA,QAAQ,GAAG,IAAI;IACzB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,IAAI,CAACM,SAAS;IACpC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACP,IAAI,CAACO,QAAQ;IAClC,IAAI,CAACC,OAAO,GAAG,IAAI,CAACR,IAAI,CAACQ,OAAO;IAChC,IAAI,CAACC,OAAO,GAAG,IAAI,CAACT,IAAI,CAACS,OAAO;IAChC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACV,IAAI,CAACU,KAAK;EAC9B;EAWAC,MAAMA,CAAA;IACJ,IAAG,CAAC,IAAI,CAACL,SAAS,IAAI,CAAC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACC,OAAO,IAAI,CAAC,IAAI,CAACC,OAAO,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;MACrF,IAAI,CAACE,OAAO,GAAG,mDAAmD;MAClE;;IAEF,IAAI,CAAChB,OAAO,CAACe,MAAM,CAAC,IAAI,CAACX,IAAI,CAACa,QAAQ,EAAE,IAAI,CAACP,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,KAAK,CAAC,CAACI,SAAS,CAAEC,IAAI,IAAG;MAC/H,IAAIA,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;QAC3B,IAAI,CAACH,OAAO,GAAG,EAAE;QACjBI,KAAK,CAAC,6CAA6C,CAAC;QACpD,IAAI,CAAChB,IAAI,CAACM,SAAS,GAAG,IAAI,CAACA,SAAS;QACpC,IAAI,CAACN,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAClC,IAAI,CAACP,IAAI,CAACQ,OAAO,GAAG,IAAI,CAACA,OAAO;QAChC,IAAI,CAACR,IAAI,CAACS,OAAO,GAAG,IAAI,CAACA,OAAO;QAChC,IAAI,CAACT,IAAI,CAACU,KAAK,GAAG,IAAI,CAACA,KAAK;QAC5BP,YAAY,CAACc,OAAO,CAAC,UAAU,EAAEhB,IAAI,CAACiB,SAAS,CAAC,IAAI,CAAClB,IAAI,CAAC,CAAC;QAC3D,IAAI,CAACH,MAAM,CAACsB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;OAC1C,MAEC,IAAI,CAACP,OAAO,GAAG,OAAO;IAC1B,CAAC,CAAC;EACJ;CAED;AA9CYlB,sBAAsB,GAAA0B,UAAA,EALlC3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW7B,sBAAsB,CA8ClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
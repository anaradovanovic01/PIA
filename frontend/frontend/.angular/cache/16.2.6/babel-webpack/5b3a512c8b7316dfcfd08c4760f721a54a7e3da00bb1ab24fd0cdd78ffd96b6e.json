{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/User';\nexport let ClassesStudentComponent = class ClassesStudentComponent {\n  constructor(router, classService) {\n    this.router = router;\n    this.classService = classService;\n    this.user = new User();\n    this.loggedIn = false;\n    this.pastClasses = [];\n    this.upcomingClasses = [];\n  }\n  ngOnInit() {\n    let item = localStorage.getItem('loggedIn');\n    if (item) this.user = JSON.parse(item);\n    if (this.user.username == \"\") this.loggedIn = false;else this.loggedIn = true;\n    if (this.user.type != 'student') {\n      alert(\"Only students can access this page\");\n      this.router.navigate(['profile']);\n      return;\n    }\n    this.classService.getAllPastClassesForStudent(this.user.username).subscribe(resp => {\n      if (!resp) alert(\"Error\");else this.pastClasses = resp;\n    });\n    this.classService.getAllUpcomingClassesForStudent(this.user.username).subscribe(resp => {\n      if (!resp) alert(\"Error\");else this.upcomingClasses = resp;\n    });\n  }\n  calculateEndTime(datetime, doubletime) {\n    let end = new Date(datetime.valueOf());\n    if (doubletime) end.setHours(end.getHours() + 2);else end.setHours(end.getHours() + 1);\n    return end;\n  }\n  checkIf15Before(datetime) {\n    let now = new Date();\n    if (Math.abs(Date.parse(datetime.toString()) - Date.parse(now.toString())) < 900) return true;else return false;\n  }\n};\nClassesStudentComponent = __decorate([Component({\n  selector: 'app-classes-student',\n  templateUrl: './classes-student.component.html',\n  styleUrls: ['./classes-student.component.css']\n})], ClassesStudentComponent);","map":{"version":3,"names":["Component","User","ClassesStudentComponent","constructor","router","classService","user","loggedIn","pastClasses","upcomingClasses","ngOnInit","item","localStorage","getItem","JSON","parse","username","type","alert","navigate","getAllPastClassesForStudent","subscribe","resp","getAllUpcomingClassesForStudent","calculateEndTime","datetime","doubletime","end","Date","valueOf","setHours","getHours","checkIf15Before","now","Math","abs","toString","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\classes-student\\classes-student.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/User';\nimport { Router } from '@angular/router';\nimport { ClassService } from '../services/class.service';\nimport { Class } from '../models/Class';\n\n@Component({\n  selector: 'app-classes-student',\n  templateUrl: './classes-student.component.html',\n  styleUrls: ['./classes-student.component.css']\n})\nexport class ClassesStudentComponent implements OnInit {\n\n  constructor(private router:Router, private classService: ClassService) {}\n\n  user: User = new User();\n  loggedIn: boolean = false;\n  pastClasses: Class[] = [];\n  upcomingClasses: Class[] = []; \n\n  ngOnInit(): void {\n    let item = localStorage.getItem('loggedIn');\n    if(item) this.user = JSON.parse(item);\n    if(this.user.username == \"\") this.loggedIn = false;\n    else this.loggedIn = true;\n    if(this.user.type != 'student') {\n      alert(\"Only students can access this page\");\n      this.router.navigate(['profile']);\n      return;\n    }\n    this.classService.getAllPastClassesForStudent(this.user.username).subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else this.pastClasses = resp;\n    });\n    this.classService.getAllUpcomingClassesForStudent(this.user.username).subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else this.upcomingClasses = resp;\n    });\n  }\n\n  calculateEndTime(datetime: Date, doubletime: boolean) {\n    let end: Date = new Date(datetime.valueOf());\n    if(doubletime) end.setHours(end.getHours()+2);\n    else end.setHours(end.getHours()+1);\n    return end;\n  }\n\n  checkIf15Before(datetime: Date) {\n    let now: Date = new Date();\n    if(Math.abs(Date.parse(datetime.toString()) - Date.parse(now.toString())) < 900) return true;\n    else return false;\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,IAAI,QAAQ,gBAAgB;AAU9B,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAElCC,YAAoBC,MAAa,EAAUC,YAA0B;IAAjD,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,YAAY,GAAZA,YAAY;IAEvD,KAAAC,IAAI,GAAS,IAAIL,IAAI,EAAE;IACvB,KAAAM,QAAQ,GAAY,KAAK;IACzB,KAAAC,WAAW,GAAY,EAAE;IACzB,KAAAC,eAAe,GAAY,EAAE;EAL2C;EAOxEC,QAAQA,CAAA;IACN,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC3C,IAAGF,IAAI,EAAE,IAAI,CAACL,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IACrC,IAAG,IAAI,CAACL,IAAI,CAACU,QAAQ,IAAI,EAAE,EAAE,IAAI,CAACT,QAAQ,GAAG,KAAK,CAAC,KAC9C,IAAI,CAACA,QAAQ,GAAG,IAAI;IACzB,IAAG,IAAI,CAACD,IAAI,CAACW,IAAI,IAAI,SAAS,EAAE;MAC9BC,KAAK,CAAC,oCAAoC,CAAC;MAC3C,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACjC;;IAEF,IAAI,CAACd,YAAY,CAACe,2BAA2B,CAAC,IAAI,CAACd,IAAI,CAACU,QAAQ,CAAC,CAACK,SAAS,CAACC,IAAI,IAAE;MAChF,IAAG,CAACA,IAAI,EAAEJ,KAAK,CAAC,OAAO,CAAC,CAAC,KACpB,IAAI,CAACV,WAAW,GAAGc,IAAI;IAC9B,CAAC,CAAC;IACF,IAAI,CAACjB,YAAY,CAACkB,+BAA+B,CAAC,IAAI,CAACjB,IAAI,CAACU,QAAQ,CAAC,CAACK,SAAS,CAACC,IAAI,IAAE;MACpF,IAAG,CAACA,IAAI,EAAEJ,KAAK,CAAC,OAAO,CAAC,CAAC,KACpB,IAAI,CAACT,eAAe,GAAGa,IAAI;IAClC,CAAC,CAAC;EACJ;EAEAE,gBAAgBA,CAACC,QAAc,EAAEC,UAAmB;IAClD,IAAIC,GAAG,GAAS,IAAIC,IAAI,CAACH,QAAQ,CAACI,OAAO,EAAE,CAAC;IAC5C,IAAGH,UAAU,EAAEC,GAAG,CAACG,QAAQ,CAACH,GAAG,CAACI,QAAQ,EAAE,GAAC,CAAC,CAAC,CAAC,KACzCJ,GAAG,CAACG,QAAQ,CAACH,GAAG,CAACI,QAAQ,EAAE,GAAC,CAAC,CAAC;IACnC,OAAOJ,GAAG;EACZ;EAEAK,eAAeA,CAACP,QAAc;IAC5B,IAAIQ,GAAG,GAAS,IAAIL,IAAI,EAAE;IAC1B,IAAGM,IAAI,CAACC,GAAG,CAACP,IAAI,CAACb,KAAK,CAACU,QAAQ,CAACW,QAAQ,EAAE,CAAC,GAAGR,IAAI,CAACb,KAAK,CAACkB,GAAG,CAACG,QAAQ,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,IAAI,CAAC,KACxF,OAAO,KAAK;EACnB;CAED;AA1CYlC,uBAAuB,GAAAmC,UAAA,EALnCrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWtC,uBAAuB,CA0CnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
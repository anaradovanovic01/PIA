{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.uri = 'http://localhost:8080/users';\n  }\n  login(username, password) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.post(`${this.uri}/login`, data);\n  }\n  logout() {\n    localStorage.clear();\n  }\n  getUser(username) {\n    return this.http.post(`${this.uri}/getUser`, {\n      username: username\n    });\n  }\n  register(username, password, type, firstname, lastname, gender, address, email, formData, typeOfSchool, currentGrade) {\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('type', type);\n    formData.append('name', firstname);\n    formData.append('lastname', lastname);\n    formData.append('email', email);\n    formData.append('address', address);\n    formData.append('typeOfSchool', typeOfSchool);\n    formData.append('currentGrade', String(currentGrade));\n    const data = {\n      username: username,\n      password: password,\n      type: type,\n      firstname: firstname,\n      lastname: lastname,\n      gender: gender,\n      address: address,\n      email: email,\n      image: image,\n      typeOfSchool: typeOfSchool,\n      currentGrade: currentGrade\n    };\n    formData.append('data', data);\n    return this.http.post(`${this.uri}/addUser`, data);\n  }\n  changePassword(username, password) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.post(`${this.uri}/changePassword`, data);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","uri","login","username","password","data","post","logout","localStorage","clear","getUser","register","type","firstname","lastname","gender","address","email","formData","typeOfSchool","currentGrade","append","String","image","changePassword","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient) { }\n\n  uri = 'http://localhost:8080/users';\n\n  login(username: string, password: string) {\n    const data = {\n      username : username,\n      password : password\n    }\n    return this.http.post<User>(`${this.uri}/login`, data);\n  }\n\n  logout() {\n    localStorage.clear();\n  }\n\n  getUser(username: string) {\n    return this.http.post<User>(`${this.uri}/getUser`, {username: username});\n  }\n\n  register(username: string, password: string, type: string, firstname: string, lastname: string, gender: string, address: string,\n    email: string, formData: FormData, typeOfSchool: string, currentGrade: number) {\n      \n      formData.append('username', username);\n      formData.append('password', password);\n      formData.append('type', type);\n      formData.append('name', firstname);\n      formData.append('lastname', lastname);\n      formData.append('email', email);\n      formData.append('address', address);\n      formData.append('typeOfSchool', typeOfSchool);\n      formData.append('currentGrade', String(currentGrade));\n\n      const data = {\n      username : username,\n      password: password,\n      type : type,\n      firstname : firstname,\n      lastname : lastname,\n      gender : gender,\n      address : address,\n      email : email,\n      image : image,\n      typeOfSchool : typeOfSchool,\n      currentGrade : currentGrade \n    }\n    formData.append('data', data);\n    return this.http.post<number>(`${this.uri}/addUser`, data);\n  }\n\n  changePassword(username: string, password: string) {\n    const data = {\n      username : username,\n      password : password\n    }\n    return this.http.post<number>(`${this.uri}/changePassword`, data);\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,GAAG,GAAG,6BAA6B;EAFI;EAIvCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,IAAI,GAAG;MACXF,QAAQ,EAAGA,QAAQ;MACnBC,QAAQ,EAAGA;KACZ;IACD,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,GAAG,QAAQ,EAAEI,IAAI,CAAC;EACxD;EAEAE,MAAMA,CAAA;IACJC,YAAY,CAACC,KAAK,EAAE;EACtB;EAEAC,OAAOA,CAACP,QAAgB;IACtB,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,GAAG,UAAU,EAAE;MAACE,QAAQ,EAAEA;IAAQ,CAAC,CAAC;EAC1E;EAEAQ,QAAQA,CAACR,QAAgB,EAAEC,QAAgB,EAAEQ,IAAY,EAAEC,SAAiB,EAAEC,QAAgB,EAAEC,MAAc,EAAEC,OAAe,EAC7HC,KAAa,EAAEC,QAAkB,EAAEC,YAAoB,EAAEC,YAAoB;IAE3EF,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAElB,QAAQ,CAAC;IACrCe,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAEjB,QAAQ,CAAC;IACrCc,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAC7BM,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAER,SAAS,CAAC;IAClCK,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAEP,QAAQ,CAAC;IACrCI,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC/BC,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEL,OAAO,CAAC;IACnCE,QAAQ,CAACG,MAAM,CAAC,cAAc,EAAEF,YAAY,CAAC;IAC7CD,QAAQ,CAACG,MAAM,CAAC,cAAc,EAAEC,MAAM,CAACF,YAAY,CAAC,CAAC;IAErD,MAAMf,IAAI,GAAG;MACbF,QAAQ,EAAGA,QAAQ;MACnBC,QAAQ,EAAEA,QAAQ;MAClBQ,IAAI,EAAGA,IAAI;MACXC,SAAS,EAAGA,SAAS;MACrBC,QAAQ,EAAGA,QAAQ;MACnBC,MAAM,EAAGA,MAAM;MACfC,OAAO,EAAGA,OAAO;MACjBC,KAAK,EAAGA,KAAK;MACbM,KAAK,EAAGA,KAAK;MACbJ,YAAY,EAAGA,YAAY;MAC3BC,YAAY,EAAGA;KAChB;IACDF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEhB,IAAI,CAAC;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,GAAG,IAAI,CAACL,GAAG,UAAU,EAAEI,IAAI,CAAC;EAC5D;EAEAmB,cAAcA,CAACrB,QAAgB,EAAEC,QAAgB;IAC/C,MAAMC,IAAI,GAAG;MACXF,QAAQ,EAAGA,QAAQ;MACnBC,QAAQ,EAAGA;KACZ;IACD,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAS,GAAG,IAAI,CAACL,GAAG,iBAAiB,EAAEI,IAAI,CAAC;EACnE;EAAC,QAAAoB,CAAA,G;qBA1DU3B,WAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXhC,WAAW;IAAAiC,OAAA,EAAXjC,WAAW,CAAAkC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
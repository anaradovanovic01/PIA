{"ast":null,"code":"import { Class } from '../models/Class';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClassService {\n  constructor(http) {\n    this.http = http;\n    this.uri = 'http://localhost:8080/classes';\n  }\n  getClassesCountLastMonth() {\n    return this.http.get(`${this.uri}/getClassesCountLastMonth`);\n  }\n  getClassesCountLastWeek() {\n    return this.http.get(`${this.uri}/getClassesCountLastWeek`);\n  }\n  getRatingForTutor(username) {\n    return this.http.post(`${this.uri}/getRatingForTutor`, username);\n  }\n  getAllClassesForTutor(username) {\n    return this.http.post(`${this.uri}/getAllClassesForTutor`, username);\n  }\n  addClass(student, tutor, subject, desc, datetime, doubletime) {\n    var c = new Class();\n    c.student = student;\n    c.tutor = tutor;\n    c.subject = subject;\n    c.description = desc;\n    c.datetime = datetime;\n    c.doubletime = doubletime;\n    return this.http.post(`${this.uri}/addClass`, JSON.stringify(c));\n  }\n  checkTutorAvailability(tutor, datetime) {\n    const data = {\n      id: 0,\n      tutor: tutor,\n      datetime: datetime,\n      review: 0\n    };\n    return this.http.post(`${this.uri}/checkTutorAvailability`, data);\n  }\n  static #_ = this.ɵfac = function ClassService_Factory(t) {\n    return new (t || ClassService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClassService,\n    factory: ClassService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Class","ClassService","constructor","http","uri","getClassesCountLastMonth","get","getClassesCountLastWeek","getRatingForTutor","username","post","getAllClassesForTutor","addClass","student","tutor","subject","desc","datetime","doubletime","c","description","JSON","stringify","checkTutorAvailability","data","id","review","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\services\\class.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Class } from '../models/Class';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClassService {\n\n  constructor(private http:HttpClient) { }\n\n  uri = 'http://localhost:8080/classes';\n\n  getClassesCountLastMonth() {\n    return this.http.get<number>(`${this.uri}/getClassesCountLastMonth`);\n  }\n\n  getClassesCountLastWeek() {\n    return this.http.get<number>(`${this.uri}/getClassesCountLastWeek`);\n  }\n\n  getRatingForTutor(username: string) {\n    return this.http.post<number>(`${this.uri}/getRatingForTutor`, username);\n  }\n\n  getAllClassesForTutor(username: string) {\n    return this.http.post<Class[]>(`${this.uri}/getAllClassesForTutor`, username);\n  }\n\n  addClass(student: string, tutor: string, subject:string, desc:string, datetime: Date, doubletime:boolean) {\n    var c = new Class();\n    c.student = student;\n    c.tutor = tutor;\n    c.subject = subject;\n    c.description = desc;\n    c.datetime = datetime;\n    c.doubletime = doubletime;\n    return this.http.post<number>(`${this.uri}/addClass`, JSON.stringify(c));\n  }\n\n  checkTutorAvailability(tutor: string, datetime: Date) {\n    const data = {\n      id: 0,\n      tutor : tutor,\n      datetime : datetime,\n      review: 0\n    }\n    return this.http.post<boolean>(`${this.uri}/checkTutorAvailability`, data);\n  }\n\n}\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,iBAAiB;;;AAMvC,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,GAAG,GAAG,+BAA+B;EAFE;EAIvCC,wBAAwBA,CAAA;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,GAAG,2BAA2B,CAAC;EACtE;EAEAG,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,GAAG,0BAA0B,CAAC;EACrE;EAEAI,iBAAiBA,CAACC,QAAgB;IAChC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,GAAG,IAAI,CAACN,GAAG,oBAAoB,EAAEK,QAAQ,CAAC;EAC1E;EAEAE,qBAAqBA,CAACF,QAAgB;IACpC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACN,GAAG,wBAAwB,EAAEK,QAAQ,CAAC;EAC/E;EAEAG,QAAQA,CAACC,OAAe,EAAEC,KAAa,EAAEC,OAAc,EAAEC,IAAW,EAAEC,QAAc,EAAEC,UAAkB;IACtG,IAAIC,CAAC,GAAG,IAAInB,KAAK,EAAE;IACnBmB,CAAC,CAACN,OAAO,GAAGA,OAAO;IACnBM,CAAC,CAACL,KAAK,GAAGA,KAAK;IACfK,CAAC,CAACJ,OAAO,GAAGA,OAAO;IACnBI,CAAC,CAACC,WAAW,GAAGJ,IAAI;IACpBG,CAAC,CAACF,QAAQ,GAAGA,QAAQ;IACrBE,CAAC,CAACD,UAAU,GAAGA,UAAU;IACzB,OAAO,IAAI,CAACf,IAAI,CAACO,IAAI,CAAS,GAAG,IAAI,CAACN,GAAG,WAAW,EAAEiB,IAAI,CAACC,SAAS,CAACH,CAAC,CAAC,CAAC;EAC1E;EAEAI,sBAAsBA,CAACT,KAAa,EAAEG,QAAc;IAClD,MAAMO,IAAI,GAAG;MACXC,EAAE,EAAE,CAAC;MACLX,KAAK,EAAGA,KAAK;MACbG,QAAQ,EAAGA,QAAQ;MACnBS,MAAM,EAAE;KACT;IACD,OAAO,IAAI,CAACvB,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACN,GAAG,yBAAyB,EAAEoB,IAAI,CAAC;EAC5E;EAAC,QAAAG,CAAA,G;qBAzCU1B,YAAY,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZ/B,YAAY;IAAAgC,OAAA,EAAZhC,YAAY,CAAAiC,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Observable, ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class Destroy extends Observable {\n  constructor() {\n    super(subscriber => this.destroySubject$.subscribe(subscriber));\n    this.destroySubject$ = new ReplaySubject(1);\n  }\n  ngOnDestroy() {\n    this.destroySubject$.next();\n    this.destroySubject$.complete();\n  }\n  static #_ = this.ɵfac = function Destroy_Factory(t) {\n    return new (t || Destroy)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Destroy,\n    factory: Destroy.ɵfac\n  });\n}","map":{"version":3,"names":["Observable","ReplaySubject","Destroy","constructor","subscriber","destroySubject$","subscribe","ngOnDestroy","next","complete","_","_2","factory","ɵfac"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\about\\destroy.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class Destroy extends Observable<void> implements OnDestroy {\r\n  private readonly destroySubject$ = new ReplaySubject<void>(1);\r\n\r\n  constructor() {\r\n    super((subscriber) => this.destroySubject$.subscribe(subscriber));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroySubject$.next();\r\n    this.destroySubject$.complete();\r\n  }\r\n}"],"mappings":"AACA,SAASA,UAAU,EAAEC,aAAa,QAAQ,MAAM;;AAGhD,OAAM,MAAOC,OAAQ,SAAQF,UAAgB;EAG3CG,YAAA;IACE,KAAK,CAAEC,UAAU,IAAK,IAAI,CAACC,eAAe,CAACC,SAAS,CAACF,UAAU,CAAC,CAAC;IAHlD,KAAAC,eAAe,GAAG,IAAIJ,aAAa,CAAO,CAAC,CAAC;EAI7D;EAEAM,WAAWA,CAAA;IACT,IAAI,CAACF,eAAe,CAACG,IAAI,EAAE;IAC3B,IAAI,CAACH,eAAe,CAACI,QAAQ,EAAE;EACjC;EAAC,QAAAC,CAAA,G;qBAVUR,OAAO;EAAA;EAAA,QAAAS,EAAA,G;WAAPT,OAAO;IAAAU,OAAA,EAAPV,OAAO,CAAAW;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
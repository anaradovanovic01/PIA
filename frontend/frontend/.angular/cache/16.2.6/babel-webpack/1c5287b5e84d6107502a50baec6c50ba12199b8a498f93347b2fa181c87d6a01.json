{"ast":null,"code":"import * as ChartJS from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"chart1Canvas\"];\nconst _c1 = [\"chart2Canvas\"];\nexport class ChartsComponent {\n  constructor() {}\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.createChart(this.chart1Canvas.nativeElement, 'bar', ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'], [12, 19, 3, 5, 2, 3]);\n    this.createChart(this.chart2Canvas.nativeElement, 'line', ['A', 'B', 'C', 'D', 'E'], [10, 20, 30, 40, 50]);\n  }\n  createChart(canvas, type, labels, data) {\n    new ChartJS.Chart(canvas, {\n      type: \"pie\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: '# of Votes',\n          data: data,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        responsive: false,\n        maintainAspectRatio: false\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ChartsComponent_Factory(t) {\n    return new (t || ChartsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsComponent,\n    selectors: [[\"app-charts\"]],\n    viewQuery: function ChartsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart1Canvas = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart2Canvas = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[\"width\", \"200\", \"height\", \"300\"], [\"chart1Canvas\", \"\"], [\"width\", \"600\", \"height\", \"400\"], [\"chart2Canvas\", \"\"]],\n    template: function ChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", 0, 1)(2, \"canvas\", 2, 3);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ChartJS","ChartsComponent","constructor","ngOnInit","ngAfterViewInit","createChart","chart1Canvas","nativeElement","chart2Canvas","canvas","type","labels","data","Chart","datasets","label","borderWidth","options","scales","y","beginAtZero","responsive","maintainAspectRatio","_","_2","selectors","viewQuery","ChartsComponent_Query","rf","ctx","i0","ɵɵelement"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\charts\\charts.component.ts","D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\charts\\charts.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport * as ChartJS  from 'chart.js/auto';\nimport { UserService } from '../services/user.service';\nimport { RegRequestService } from '../services/reg_request.service';\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.css']\n})\nexport class ChartsComponent implements OnInit{\n\n  /*constructor(private userService:UserService, private regRequestService:RegRequestService) {}\n\n  ngOnInit(): void {\n    this.userService.getGenderCount().subscribe(resp=>{\n      let genderStudents = document.getElementById('genderStudents') as HTMLCanvasElement;\n      let data = {\n        labels: ['M','F'],\n        datasets: [{data: [resp[0], resp[1]], backgroundColor: ['rgb(54, 162, 235)','rgb(255, 99, 132)'], hoverOffset: 4}]\n      };\n      if(genderStudents != null) {\n        new Chart(genderStudents, {type: 'pie',data: data});\n      }\n      let genderTutors = document.getElementById('genderTutors') as HTMLCanvasElement;\n      data.datasets = [{data: [resp[2], resp[3]], backgroundColor: ['rgb(54, 162, 235)', 'rgb(255, 99, 132)'], hoverOffset: 4}];\n      if(genderTutors != null) {\n        new Chart(genderTutors, {type: 'pie',data: data});\n      }\n    })\n    this.regRequestService.getAgeCount().subscribe(resp=>{\n      let age = document.getElementById('age') as HTMLCanvasElement;\n      let data = {\n        labels: ['Primary school - 1-4 grade','Primary school - 5-8 grade','High school'],\n        datasets: [{lable: \"\", data: [resp[0], resp[1], resp[2]], backgroundColor: ['rgb(54, 162, 235)','rgb(255, 99, 132)','rgb(255, 205, 86)'], hoverOffset: 4}]\n      };\n      if(age != null) {\n        new Chart(age, {type: 'bar',data: data,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          responsive: true,\n          aspectRatio:1.5,\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n        });\n      }\n    })\n  }\n    \n\n}*/\n\n  @ViewChild('chart1Canvas') chart1Canvas!: ElementRef;\n  @ViewChild('chart2Canvas') chart2Canvas!: ElementRef;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.createChart(this.chart1Canvas.nativeElement, 'bar', ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'], [12, 19, 3, 5, 2, 3]);\n    this.createChart(this.chart2Canvas.nativeElement, 'line', ['A', 'B', 'C', 'D', 'E'], [10, 20, 30, 40, 50]);\n  }\n\n  private createChart(canvas: HTMLCanvasElement, type: ChartJS.ChartType, labels: string[], data: number[]): void {\n    new ChartJS.Chart(canvas, {\n      type: \"pie\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: '# of Votes',\n          data: data,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }, responsive: false,\n        maintainAspectRatio: false\n      }\n    });\n  }\n}\n","<!--<div>\n    <h3 class=\"text-center\">Students</h3>\n    <canvas id=\"genderStudents\"></canvas>\n</div>\n<div>\n    <h3 class=\"text-center\">Tutors</h3>\n    <canvas id=\"genderTutors\"></canvas>\n</div>\n<div>\n    <h3 class=\"text-center\">Age</h3>\n    <canvas id=\"age\"></canvas>\n</div>-->\n  \n\n<canvas #chart1Canvas width=\"200\" height=\"300\"></canvas>\n<canvas #chart2Canvas width=\"600\" height=\"400\"></canvas>"],"mappings":"AACA,OAAO,KAAKA,OAAO,MAAO,eAAe;;;;AASzC,OAAM,MAAOC,eAAe;EAqD1BC,YAAA,GAAgB;EAEhBC,QAAQA,CAAA,GACR;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,YAAY,CAACC,aAAa,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtI,IAAI,CAACF,WAAW,CAAC,IAAI,CAACG,YAAY,CAACD,aAAa,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5G;EAEQF,WAAWA,CAACI,MAAyB,EAAEC,IAAuB,EAAEC,MAAgB,EAAEC,IAAc;IACtG,IAAIZ,OAAO,CAACa,KAAK,CAACJ,MAAM,EAAE;MACxBC,IAAI,EAAE,KAAK;MACXE,IAAI,EAAE;QACJD,MAAM,EAAEA,MAAM;QACdG,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,YAAY;UACnBH,IAAI,EAAEA,IAAI;UACVI,WAAW,EAAE;SACd;OACF;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;;SAEhB;QAAEC,UAAU,EAAE,KAAK;QACpBC,mBAAmB,EAAE;;KAExB,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAnFUtB,eAAe;EAAA;EAAA,QAAAuB,EAAA,G;UAAfvB,eAAe;IAAAwB,SAAA;IAAAC,SAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;QCI5BE,EAAA,CAAAC,SAAA,mBAAwD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
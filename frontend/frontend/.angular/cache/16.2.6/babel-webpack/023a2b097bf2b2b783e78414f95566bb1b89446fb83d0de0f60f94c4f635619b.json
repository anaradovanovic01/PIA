{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../models/User';\nexport let RegistationRequestsComponent = class RegistationRequestsComponent {\n  constructor(router, userService, subjectService, regRequestService, teachesService) {\n    this.router = router;\n    this.userService = userService;\n    this.subjectService = subjectService;\n    this.regRequestService = regRequestService;\n    this.teachesService = teachesService;\n    this.user = new User();\n    this.loggedIn = false;\n    this.subjectName = \"\";\n    this.students = [];\n    this.approvedTutors = [];\n    this.nonApprovedTutors = [];\n    this.requests = [];\n  }\n  ngOnInit() {\n    let item = localStorage.getItem('loggedIn');\n    if (item) this.user = JSON.parse(item);\n    if (this.user.username == \"\") this.loggedIn = false;else this.loggedIn = true;\n    if (this.user.type != 'admin') {\n      alert(\"Only admins can access this page\");\n      this.router.navigate(['']);\n      return;\n    }\n    this.userService.getAllStudents().subscribe(resp => {\n      if (!resp) alert(\"Error\");else this.students = resp;\n    });\n    this.userService.getApprovedTutors().subscribe(resp => {\n      if (!resp) alert(\"Error\");else {\n        this.approvedTutors = resp;\n        this.approvedTutors.forEach(t => {\n          this.teachesService.getAllSubjectsForTutor(t.username).subscribe(resp => {\n            t.subjects = resp;\n          });\n        });\n      }\n    });\n    this.userService.getNonApprovedTutors().subscribe(resp => {\n      if (!resp) alert(\"Error\");else this.nonApprovedTutors = resp;\n    });\n  }\n  add() {\n    this.subjectService.add(this.subjectName).subscribe(resp => {\n      if (!resp) alert(\"Error\");else alert(\"You added a new subejct.\");\n    });\n  }\n  approve(u) {\n    this.regRequestService.approve(u.username).subscribe(resp => {\n      if (!resp) alert(\"Error\");else this.ngOnInit();\n    });\n  }\n  deny(u) {\n    this.regRequestService.deny(u.username).subscribe(resp => {\n      if (!resp) alert(\"Error\");else this.ngOnInit();\n    });\n  }\n  remove(t) {\n    this.userService.removeTutor(t.username).subscribe(resp => {\n      if (!resp) alert(\"Error\");else this.ngOnInit();\n    });\n  }\n  update(u) {\n    localStorage.setItem(\"toUpdate\", JSON.stringify(u));\n    this.router.navigate(['updateProfile']);\n  }\n};\nRegistationRequestsComponent = __decorate([Component({\n  selector: 'app-registation-requests',\n  templateUrl: './registation-requests.component.html',\n  styleUrls: ['./registation-requests.component.css']\n})], RegistationRequestsComponent);","map":{"version":3,"names":["Component","User","RegistationRequestsComponent","constructor","router","userService","subjectService","regRequestService","teachesService","user","loggedIn","subjectName","students","approvedTutors","nonApprovedTutors","requests","ngOnInit","item","localStorage","getItem","JSON","parse","username","type","alert","navigate","getAllStudents","subscribe","resp","getApprovedTutors","forEach","t","getAllSubjectsForTutor","subjects","getNonApprovedTutors","add","approve","u","deny","remove","removeTutor","update","setItem","stringify","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Faks\\7. semestar\\PIA\\PIA 2023\\Moj projekat\\frontend\\frontend\\src\\app\\registation-requests\\registation-requests.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../models/User';\nimport { Router } from '@angular/router';\nimport { SubjectService } from '../services/subject.service';\nimport { RegRequest } from '../models/RegRequest';\nimport { UserService } from '../services/user.service';\nimport { RegRequestService } from '../services/reg_request.service';\nimport { TeachesService } from '../services/teaches.service';\n\n@Component({\n  selector: 'app-registation-requests',\n  templateUrl: './registation-requests.component.html',\n  styleUrls: ['./registation-requests.component.css']\n})\nexport class RegistationRequestsComponent {\n\n  constructor(private router:Router, private userService:UserService, private subjectService:SubjectService, \n    private regRequestService:RegRequestService, private teachesService:TeachesService) {}\n\n  user: User = new User();\n  loggedIn: boolean = false;\n  subjectName: string = \"\";\n  students: User[] = [];\n  approvedTutors: User[] = [];\n  nonApprovedTutors: User[] = [];\n  requests: RegRequest[] = [];\n\n  ngOnInit(): void {\n    let item = localStorage.getItem('loggedIn');\n    if(item) this.user = JSON.parse(item);\n    if(this.user.username == \"\") this.loggedIn = false;\n    else this.loggedIn = true;\n    if(this.user.type != 'admin') {\n      alert(\"Only admins can access this page\");\n      this.router.navigate(['']);\n      return;\n    }\n    this.userService.getAllStudents().subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else this.students = resp;\n    })\n    this.userService.getApprovedTutors().subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else {\n        this.approvedTutors = resp;\n        this.approvedTutors.forEach(t=>{\n          this.teachesService.getAllSubjectsForTutor(t.username).subscribe(resp=>{\n            t.subjects = resp;\n          })\n        })\n      }\n    })\n    this.userService.getNonApprovedTutors().subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else this.nonApprovedTutors = resp;\n    })\n  }\n\n  add() {\n    this.subjectService.add(this.subjectName).subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else alert(\"You added a new subejct.\");\n    })\n  }\n\n  approve(u:User) {\n    this.regRequestService.approve(u.username).subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else this.ngOnInit();\n    })\n  }\n\n  deny(u:User) {\n    this.regRequestService.deny(u.username).subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else this.ngOnInit();\n    })\n  }\n\n  remove(t:User) {\n    this.userService.removeTutor(t.username).subscribe(resp=>{\n      if(!resp) alert(\"Error\");\n      else this.ngOnInit();\n    })\n  }\n\n  update(u:User) {\n    localStorage.setItem(\"toUpdate\", JSON.stringify(u));\n    this.router.navigate(['updateProfile']);\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}